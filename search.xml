<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>NEMU-PA1</title>
    <url>/2024/01/10/NEMU-PA1/</url>
    <content><![CDATA[<h3 id="NEMU是什么"><a href="#NEMU是什么" class="headerlink" title="NEMU是什么"></a>NEMU是什么</h3><p><font color="red">个人理解：</font>是NJU编写的一个模拟器，名字来源于<a href="https://zh.wikipedia.org/wiki/QEMU">QEMU（quick emulator)</a>。NEMU运行于GNU/Linux操作系统上，用C语言模拟了一个虚拟的计算机系统，包括CPU、内存、IO设备等。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">                         +---------------------+  +---------------------+</span><br><span class="line">                         |     Super Mario     |  |    &quot;Hello World&quot;    |</span><br><span class="line">                         +---------------------+  +---------------------+</span><br><span class="line">                         |    Simulated NES    |  |      Simulated      |</span><br><span class="line">                         |       hardware      |  |       hardware      |</span><br><span class="line">+---------------------+  +---------------------+  +---------------------+</span><br><span class="line">|    &quot;Hello World&quot;    |  |     NES Emulator    |  |        NEMU         |</span><br><span class="line">+---------------------+  +---------------------+  +---------------------+</span><br><span class="line">|      GNU/Linux      |  |      GNU/Linux      |  |      GNU/Linux      |</span><br><span class="line">+---------------------+  +---------------------+  +---------------------+</span><br><span class="line">|    Real hardware    |  |    Real hardware    |  |    Real hardware    |</span><br><span class="line">+---------------------+  +---------------------+  +---------------------+</span><br><span class="line">          (a)                      (b)                     (c)</span><br></pre></td></tr></table></figure>
<p>图(c)中NEMU和Simulated hardware之间应该还有一层抽象计算机层，描述一个计算机系统需要有哪些硬件和接口。有了抽象计算机层，可以实现<br>多种不同指令架构集的计算机而不改变虚拟机器上层程序的设计形式。</p>
<p>手册给了x86、riscv32和mips32三种指令集选择，选了mips32</p>
<hr>
<h3 id="计算机可以没有寄存器吗"><a href="#计算机可以没有寄存器吗" class="headerlink" title="计算机可以没有寄存器吗"></a>计算机可以没有寄存器吗</h3><h4 id="回答这个问题之前先看看MIPS32手册"><a href="#回答这个问题之前先看看MIPS32手册" class="headerlink" title="回答这个问题之前先看看MIPS32手册"></a>回答这个问题之前先看看MIPS32手册</h4><ol>
<li>MIPS32架构定义了CPU寄存器和FPU寄存器：<ul>
<li>CPU寄存器包括r0 ~ r31，共32个通用寄存器；Program Counter；HI/LO（存放乘除指令结果）。r0可以代表默认0，r31在 <strong>JAL, BLTZAL, BLTZALL, BGEZAL, BGEZALL</strong> 指令中表示默认目标地址。</li>
<li>FPU寄存器包括32个通用寄存器，存放单精度浮点数；5个控制寄存器（暂时不清楚用法）。</li>
</ul>
</li>
<li>MIPS32默认是小端序</li>
<li>对齐策略：<ul>
<li>半字（2 byte）数据要对齐0，2，4…</li>
<li>字数据（4 byte）数据对齐0，4，8…</li>
<li>双字数据（8 byte）数据对齐0，8，16…<h4 id="个人思考"><a href="#个人思考" class="headerlink" title="个人思考"></a>个人思考</h4>计算机的寄存器用于暂存数据和指令，如果没有寄存器，那就需要其他介质作为替代，比如内存。如果没有内存，也可以是外部指令流输入控制计算机运行，但是为了暂存中间结果，始终需要有一个存储器模块。</li>
</ul>
</li>
</ol>
<p>MIPS手册描述了编程模型的6个方面：</p>
<ul>
<li>CPU数据形式：<ul>
<li>bit</li>
<li>字节</li>
<li>半字</li>
<li>字</li>
<li>双字</li>
</ul>
</li>
<li>协处理器<ul>
<li>CP0：用于虚拟地址转换、异常处理、核心调度、控制cache系统、故障恢复等</li>
<li>CP1：保留用于浮点处理器FPU</li>
<li>CP2：作特殊用途</li>
<li>CP3：保留用于MIPS64架构</li>
</ul>
</li>
<li>CPU寄存器有哪些</li>
<li>FPU数据形式<ul>
<li>32位单精度浮点数</li>
<li>32位单精度浮点数 paired-single（没理解意思）</li>
<li>64位双精度浮点数</li>
<li>32位定点字</li>
<li>64位顶点字</li>
</ul>
</li>
<li>字节序和大小端</li>
<li>内存访问类型</li>
</ul>
<p>如果不存在寄存器，CPU的数据处理形式并不受影响，协处理器工作不受影响，CPU中的程序计数器PC功能需要由其他硬件支持，通用寄存器暂存功能需要由其他硬件支持，FPU的数据处理形式不受影响，字节序和大小端仍然需要定义，内存访问类型仍然需要定义。</p>
<h3 id="从状态机视角理解程序运行"><a href="#从状态机视角理解程序运行" class="headerlink" title="从状态机视角理解程序运行"></a>从状态机视角理解程序运行</h3><p><img src="/2024/01/10/NEMU-PA1/1.jpg" alt="problem"><br>图灵机的基础：当前状态+当前输入 -&gt; 状态转移 -&gt; 下一状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// PC: instruction    | // label: statement</span><br><span class="line">0: mov  r1, 0         |  pc0: r1 = 0;</span><br><span class="line">1: mov  r2, 0         |  pc1: r2 = 0;</span><br><span class="line">2: addi r2, r2, 1     |  pc2: r2 = r2 + 1;</span><br><span class="line">3: add  r1, r1, r2    |  pc3: r1 = r1 + r2;</span><br><span class="line">4: blt  r2, 100, 2    |  pc4: if (r2 &lt; 100) goto pc2;   // branch if less than</span><br><span class="line">5: jmp 5              |  pc5: goto pc5;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(PC, r1, r2) : (0, x, x) -&gt; (1, 0, x) -&gt; (2, 0, 0) -&gt; (3, 0, 1)</span><br><span class="line">-&gt; (4, 1, 1) -&gt; (2, 1, 1) -&gt; (3, 1, 2) -&gt; (4, 3, 2) -&gt; (2, 3, 2)</span><br><span class="line">-&gt; (3, 3, 3) -&gt; (4, 6, 3) -&gt; (2, 6, 3) -&gt; ... -&gt; (4, 4851, 99) </span><br><span class="line">-&gt; (2, 4950, 99) -&gt; (3, 4950, 100) -&gt; (4, 5050, 100) </span><br><span class="line">-&gt; (5, 5050, 100) (end)</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>ICS实验</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>NEMU-pa0</title>
    <url>/2023/12/14/NEMU-pa0/</url>
    <content><![CDATA[<p>主要问题有</p>
<ul>
<li>虚拟机网络问题</li>
<li>github TLS问题</li>
</ul>
<h3 id="虚拟机网络"><a href="#虚拟机网络" class="headerlink" title="虚拟机网络"></a>虚拟机网络</h3><p>因为我主机用了代理，允许局域网连接。<br>想要使用主机的网络，使用的是桥接模式，复制主机的网络状态，<br>相当于虚拟机加入到了主机同一个局域网中，可以互相ping到。<br>然后系统代理选择主机的IP和相应端口，所有流量都先转发给主机做处理，<br>主机有点像一个默认“网关”？</p>
<hr>
<p><font color="red">2023/12/15 update</font></p>
<p>用桥接模式有一点问题，就是主机的IP是变化的，相应的代理都要手动变更。</p>
<p>NAT模式是虚拟了一个Vmnet交换机，交换机上连接了虚拟NAT设备、虚拟DHCP服务器和虚拟机。虚拟机通过虚拟交换机、虚拟NAT和外部主机网关连接，实现联网。另有一个虚拟网卡，实现主机和虚拟机的通信。虚拟网卡的地址是相对固定的，所以代理地址只要填虚拟网卡的地址即可。<br></p>
<h3 id="github-TLS问题"><a href="#github-TLS问题" class="headerlink" title="github TLS问题"></a>github TLS问题</h3><p>git clone、push的时候，会出现TLS connection不安全的问题。</p>
<p>主要解决方法是，以自己的github账号为KEY，生成一对RSA密钥，用于SSH连接<a href="mailto:&#x67;&#105;&#116;&#64;&#x67;&#105;&#x74;&#104;&#x75;&#x62;&#46;&#99;&#111;&#x6d;">&#x67;&#105;&#116;&#64;&#x67;&#105;&#x74;&#104;&#x75;&#x62;&#46;&#99;&#111;&#x6d;</a>。</p>
<p>本机ssh-keygen -t rsa -C “xxx”之后，将公钥添加到github账号，相当于免密登录</p>
<p>然后git clone和git push时要使用<a href="mailto:&#x67;&#105;&#x74;&#64;&#103;&#x69;&#116;&#104;&#x75;&#x62;&#46;&#99;&#x6f;&#x6d;">&#x67;&#105;&#x74;&#64;&#103;&#x69;&#116;&#104;&#x75;&#x62;&#46;&#99;&#x6f;&#x6d;</a>/仓库地址，而不是http或https</p>
<h3 id="顺便记录一个最简单的Makefile"><a href="#顺便记录一个最简单的Makefile" class="headerlink" title="顺便记录一个最简单的Makefile"></a>顺便记录一个最简单的Makefile</h3><p>hello:<br>    gcc hello.cpp -o hello</p>
<p>以后再学</p>
]]></content>
      <categories>
        <category>ICS实验</category>
      </categories>
      <tags>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>远程软件控制Manjaro</title>
    <url>/2021/11/09/%E8%BF%9C%E7%A8%8B%E8%BD%AF%E4%BB%B6%E6%8E%A7%E5%88%B6Manjaro/</url>
    <content><![CDATA[<h3 id="为什么要用Manjaro"><a href="#为什么要用Manjaro" class="headerlink" title="为什么要用Manjaro"></a>为什么要用Manjaro</h3><p>实验室电脑配置实在是太tm烂了，一起之下我就把系统格了<br>受usao大哥蛊惑想试试arch linux，又有点怕麻烦所以用了Manjaro<br>这下U盘也成系统启动盘了，回去搞个旧电脑再弄一下</p>
<h3 id="下载软件"><a href="#下载软件" class="headerlink" title="下载软件"></a>下载软件</h3><p>Manjaro可以用pacma build直接构建软件</p>
<p>记得在teamviewer官网上把以前的电脑给删除了，不然限制用户数</p>
<p>anydesk也还可以用</p>
<h3 id="解决远程软件无法显示（黑屏）"><a href="#解决远程软件无法显示（黑屏）" class="headerlink" title="解决远程软件无法显示（黑屏）"></a>解决远程软件无法显示（黑屏）</h3><p>在/etc/gdm3/custom.conf，允许自动登录，填上用户名</p>
<p>最后一行设置<code>WaylandEnable=false</code></p>
<h3 id="解决无显示器导致卡顿"><a href="#解决无显示器导致卡顿" class="headerlink" title="解决无显示器导致卡顿"></a>解决无显示器导致卡顿</h3><p>安装xf86，sudo pacman -S xf86-video-dummy</p>
<p>修改配置 sudo gedit /etc/X11/xorg.conf</p>
<p>抄来的配置，随便了能用就行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Section &quot;Device&quot;</span><br><span class="line">    Identifier  &quot;Configured Video Device&quot;</span><br><span class="line">    Driver      &quot;dummy&quot;</span><br><span class="line">EndSection</span><br><span class="line"></span><br><span class="line">Section &quot;Monitor&quot;</span><br><span class="line">    Identifier  &quot;Configured Monitor&quot;</span><br><span class="line">    HorizSync 31.5-48.5</span><br><span class="line">    VertRefresh 50-70</span><br><span class="line">EndSection</span><br><span class="line"></span><br><span class="line">Section &quot;Screen&quot;</span><br><span class="line">    Identifier  &quot;Default Screen&quot;</span><br><span class="line">    Monitor     &quot;Configured Monitor&quot;</span><br><span class="line">    Device      &quot;Configured Video Device&quot;</span><br><span class="line">    DefaultDepth 24</span><br><span class="line">    SubSection &quot;Display&quot;</span><br><span class="line">        Depth 24</span><br><span class="line">        Modes &quot;1920x1080&quot;</span><br><span class="line">    EndSubSection</span><br><span class="line">EndSection</span><br></pre></td></tr></table></figure>

<h3 id="唉，他妈的，能不能给我换个配置好点的电脑"><a href="#唉，他妈的，能不能给我换个配置好点的电脑" class="headerlink" title="唉，他妈的，能不能给我换个配置好点的电脑"></a>唉，他妈的，能不能给我换个配置好点的电脑</h3><p>结束！</p>
]]></content>
      <categories>
        <category>Manjaro</category>
      </categories>
      <tags>
        <tag>上海</tag>
        <tag>研一</tag>
        <tag>学习</tag>
      </tags>
  </entry>
</search>
